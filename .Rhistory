adduct('C1h4',mode = '-')
adduct('C1h4na1',mode = '-')
contam(33.0335, ppm = 10, mode = '+')
source('~/Dropbox/Github/MSbox/R/contaminant.R')
contam(33.0335, ppm = 10, mode = '+')
contam(a, ppm = 10, mode = '+')
source('~/Dropbox/Github/MSbox/R/contaminant.R')
contam(a, ppm = 10, mode = '+')
contam(a, ppm = 10, mode = '+')
contam(a, ppm = 10, mode = '+-')
contam(1, ppm = 10, mode = '+-')
source('~/Dropbox/Github/MSbox/R/contaminant.R')
if(mode != "+" & mode !="-") {stop("WARNING: ion mode invalid. Choose '+' or '-'.\n")}
source('~/Dropbox/Github/MSbox/R/contaminant.R')
contam(33.0335, ppm = 10, mode = '+')
contam(1, ppm = 10, mode = '+-')
a =  contam(1, ppm = 10, mode = '+')
a
length(a)
nrows(a)
nrow(a)
contam(33.0335, ppm = 10, mode = '+')
b = contam(33.0335, ppm = 10, mode = '+')
nrow(b)
ifelse(nrow(a) == 0,"even","odd")
ifelse(nrow(a) == 0, a,"odd")
ifelse(nrow(a) == 0, result = a,"odd")
source('~/Dropbox/Github/MSbox/R/contaminant.R')
contam(33.0335, ppm = 10, mode = '+')
contam(33.0, ppm = 10, mode = '+')
contam(33.0, ppm = 10, mode = '-')
contam(33.0, ppm = 10, mode = '+')
sysdata
data(sysdata)
data('R/sysdata')
data('R/sysdata.rda')
load("~/Dropbox/Github/MSbox/R/sysdata.rda")
a = sysdata$isopattern
a = as.data.frame(sysdata$isopattern)
View(a)
a = as.data.frame(sysdata$element)
View(a)
View(a)
Al(27)
iso = '[13]C2[2]H3'
unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
library(stringr)
unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
iso = '[13]C2[2]H3'
unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\])*d+"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\])d+"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\d])"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]\\d])"))
unlist(str_extract_all(iso,"(\\[[:alnum:]]\\d)"))
unlist(str_extract_all(iso,"(\\[[:alnum:]]\\d)"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]\\d])"))
?str_extract_all()
shopping_list <- c("apples x4", "bag of flour", "bag of sugar", "milk x2")
str_extract(shopping_list, "\\b[a-z]{1,4}\\b")
str_extract(shopping_list, "\\d")
unlist(str_extract_all(iso,"\\d)"))
unlist(str_extract_all(iso,"\\d"))
unlist(str_extract_all(iso,"[a-z]\\d"))
unlist(str_extract_all(iso,"[a-Za-z]\\d"))
unlist(str_extract_all(iso,"[a-Za-z]+\\d"))
unlist(str_extract_all(iso,"\\d"))
unlist(str_extract_all(iso))
unlist(str_extract_all(iso,"\\d"))
unlist(str_extract_all(iso,"\\b"))
unlist(str_extract_all(iso,"\\c"))
unlist(str_extract_all(iso,"["))
unlist(str_extract_all(iso,"[]"))
unlist(str_extract_all(iso,"\\[]"))
unlist(str_extract_all(iso,"\\["))
unlist(str_extract_all(iso,"[a-z]"))
unlist(str_extract_all(iso,"[a-z]+"))
unlist(str_extract_all(iso,"[a-Za-z]+"))
unlist(str_extract_all(iso,"[a-Za-z]"))
unlist(str_extract_all(iso,"\\a"))
unlist(str_extract_all(iso,"\\"))
unlist(str_extract_all(iso,"\\b"))
unlist(str_extract_all(iso,"\\a"))
unlist(str_extract_all(iso,"\\d"))
unlist(str_extract_all(iso,"(?<!\\])\\d+")))
unlist(str_extract_all(iso,"(?<!\\[])\\d+")))
unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
strsplit(iso, "(?<=[A-Za-z])(?=[0-9])|(?<=[0-9])(?=[A-Za-z])", perl = TRUE)[[1]]
v1[c(TRUE, FALSE)]
v1 = strsplit(iso, "(?<=[A-Za-z])(?=[0-9])|(?<=[0-9])(?=[A-Za-z])", perl = TRUE)[[1]]
v1[c(TRUE, FALSE)]
v1[c(TRUE, FALSE)]
unlist(str_extract_all(iso,"(?<!\\[])\\d+"))
unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
unlist(str_extract_all(iso,"(d+"))
unlist(str_extract_all(iso,"(?<!\\[])\\d+"))
unlist(str_extract_all(iso,"\\d")
)
unlist(str_extract_all(iso,"(?<\\[])\\d+"))
unlist(str_extract_all(iso,"(<!\\[])\\d+"))
unlist(str_extract_all(iso,"(?<\\[])\\d+"))
unlist(str_extract_all(iso,"(?<!\\[])\\d+"))
unlist(str_extract_all(iso,"(?<!\\[])\\d+"))
unlist(str_extract_all(iso,"(?<!\\[])\\d"))
unlist(str_extract_all(iso,"(?<!\\[])\\d+"))
unlist(str_extract_all(iso,"(?<!\\[])\\d-"))
unlist(str_extract_all(iso,"(?<!\\[])\\d"))
str_extract_all(iso, perl('(?<=\\[|-)[0-9]+(?=\\]|-?)'))[[1]]
gsub('.+\\(([0-9]+)\\).+?$', '\\1', iso)
gsub('.+\\(([0-9]+)\\).+?$', '\\1', iso)
gsub('()', '[]', '(13)')
gsub('(', '[', '(13)')
gsub('()', '[]', '(13)')
c <- "(13)C"
gsub("()", '[]', c, fixed = T)
gsub("()", '[]', c)
gsub("()", '[]', c, fixed() = T)
gsub("()", '[]', c, fixed= T)
n = c("[Dave]", "[Tony]", "[Sara]")
n
gsub("\\[|\\]", "()", n)
gsub("\\[|\\]", "[|\\]", n)
gsub("\\[|\\]", "[\\]", n)
gsub("\\[|\\]", "[]", n)
gsub("\\[|\\]", "[", n)
gsub("\\[|\\]", "\\[|\\]", n)
gsub("\\[|\\]", "[", n)
gsub("\\[|\\]", "[", n)
gsub("\\[", "(", n)
View(a)
element <- as.data.frame(sysdata$element)
element <- as.data.frame(sysdata$element)
element$Symbol <- gsub("\\[", "(", element$Symbol)
element$Symbol <- gsub("\\]", ")", element$Symbol)
View(element)
View(element)
element$Symbol <- gsub("\\[", "(", element$Symbol)
View(element)
element$Symbol
element$Symbol[1]
gsub("\\[", "(", element$Symbol[1])
gsub("\\(", "[", element$Symbol)
element <- as.data.frame(sysdata$element)
element$Symbol <- gsub("\\(", "[", element$Symbol)
element$Symbol <- gsub("\\)", "]", element$Symbol)
View(element)
unlist(str_extract_all(x,"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
unlist(str_extract_all('A[1]',"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
unlist(str_extract_all('[1]A',"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
unlist(str_extract_all('[1]A',"[a-zA-Z]+*(\\[[[:alnum:]]+\\])"))
View(element)
Al[27]
a = Al[27]
a = 'Al[27]'
strsplit(a,split=']', fixed=TRUE)
strsplit(a,split='[', fixed=TRUE)
strsplit(a,split='[')
strsplit(a,split='[', fixed=TRUE)
strsplit(a,split='[', fixed=TRUE)
stringr::str_replace_all(s, "(.*)(\\[.*\\])", "\\2\\1")
s <- "Mr[5]"
stringr::str_replace_all(s, "(.*)(\\[.*\\])", "\\2\\1")
stringr::str_replace_all(element$Symbol, "(.*)(\\[.*\\])", "\\2\\1")
element$Symbol <- str_replace_all(element$Symbol, "(.*)(\\[.*\\])", "\\2\\1")
View(element)
values2 <- gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", s)
values2
element <- as.data.frame(sysdata$element)
# replace '()' with '[]'
element$Symbol <- gsub("\\(", "[", element$Symbol)
element$Symbol <- gsub("\\)", "]", element$Symbol)
View(element)
element$Symbol <- gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", element$Symbol)
View(element)
element <- as.data.frame(sysdata$element)
element$Symbol <- gsub("\\[[0-9]+\\]", "[", element$Symbol)
values <- c("Mr[5]","Mr[123VV]", "Mrs[456]")
gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", values)
gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", values)
gsub("^(.+)(\\[[a-z]+\\])$", "\\2\\1", values)
gsub("^(.+)(\\[[a-Az-z]+\\])$", "\\2\\1", values)
gsub("^(.+)(\\[[A-Z]+\\])$", "\\2\\1", values)
gsub("^(.+)(\\[[a-Az-z]+\\])$", "\\2\\1", values)
a = 'C(13)'
chartr("()", "[]", a)
element <- as.data.frame(sysdata$element)
View(element)
element$Symbol <- chartr("()", "[]", element$Symbol)
View(element)
element$Symbol <- gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", element$Symbol)
View(element)
?chartr()
regmatches(this, gregexpr("[0-9]+",  "A1B10C5"))
str <- "A1B10C5"
str_extract_all(str, "[0-9]+")
str_extract_all(str, "[0-9]")
str_extract_all(str, "[0-9]+")
str_extract_all('[13]C1', "[0-9]+")
str_match_all("A1B10C5", "([a-zA-Z]+)([0-9]+)")[[1]][,-1]
str_match_all("A1B10C", "([a-zA-Z]+)([0-9]+)")[[1]][,-1]
str_match_all("A1B10C", "([a-zA-Z]+)([0-9]+)")[[1]]
strsplit(str1, "[0-9]+")
strsplit(str, "[0-9]+")
strsplit('[13]C1', "[0-9]+")
strsplit('C1', "[0-9]+")
strsplit('C1', "[a-z]+")
strsplit('C1', "[a-z]+")
strsplit('[13]C1H2', "[a-z]+")
strsplit('[13]C1H2', "[1-9]+")
strsplit('[13]C1H2', "[0-9]+")
library(MSbox)
mz('C1', z = -1)
let = unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
let
unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
unlist(str_extract_all(iso,"\\])\\d+"))
unlist(str_extract_all(iso,"\\])\\d+"))
?strsplit
strsplit('[13]C1', "\\]")[[1]]
strsplit('[13]C1', "\\[]]")[[1]]
strsplit('[13]C1', "\\[]")[[1]]
strsplit('[13]C1', "\\")[[1]]
strsplit('[13]C1', "\\(0-9)")[[1]]
strsplit('[13]C1', "]")[[1]]
strsplit('[13]C1', "]")
strsplit('[13]C1', "a")
strsplit('[13]C1', "[a-z]")
v1 <- strsplit('1A', "(?<=[A-Za-z])(?=[0-9])|(?<=[0-9])(?=[A-Za-z])", perl = TRUE)[[1]]
vi
v1
v1 <- strsplit('1A', "(?<=[A-Za-z])(?=[0-9])|(?<=[0-9])(?=[A-Za-z])", perl = TRUE)[[1]]
v1
v1 <- strsplit('1A', "(?<=[[[:alnum:]]+)(?=[0-9])|(?<=[0-9])(?=[A-Za-z])", perl = TRUE)[[1]]
v1 <- strsplit('1A', "(?<=[[[:alnum:]]+)(?=[0-9])|(?<=[0-9])(?=[[[:alnum:]]+)", perl = TRUE)[[1]]
v1 <- strsplit('1A', "(?<=[[[:alnum:]]+)(?=[0-9])|(?<=[0-9])(?=[[[:alnum:]]+)", perl = TRUE)[[1]]
install.packages("tidyverse")
unlist(str_extract_all(iso,"(\\[[[:alnum:]]+\\])*[a-zA-Z]+"))
num = unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
num
unlist(str_extract_all(iso,"(?<!\\[)\\d+"))
str_extract_all(iso,"(?<!\\[)\\d+")
str_extract_all(iso,"(?<!\\[]\\d+")
str_extract_all(iso,"(?<!\\[\\d+")
str_extract_all(iso,"(?<!\\[)\\d+")
str_extract_all(iso,"(?<!\\])\\d+")
str_extract_all(iso,"(?<!\\[)\\d")
str_extract_all(iso,"(?<\\[)\\d+")
str_extract_all(iso,"?<!\\[\\d")
str_extract_all(iso,"?<!\\[\\d")
str_extract_all(iso,"(?<\\[)\\d+")
str_extract_all(iso,"(?<!\\[)\\d")
str_extract_all(iso,"(?<!\\[)\\d+")
str_extract_all(iso,"(?<!\\])\\d+")
str_extract_all(iso,"(?<!\\])(?<!\\[)\\d+")
str_extract_all(iso,"(?<!\\[)(?<!\\])\\d+")
str_extract_all(iso,"(?<!\\[)(?<!\\])\\d+")
str_extract_all(iso,"(\\d+(?<!\\[)")
str_extract_all(iso,"(\\d+(?<!\\])")
string1 <- "This is a string"
+
x <- c("apple", "banana", "pear")
str_view(x, ".a.")
str_view(x, ".l.")
str_view(x, ".a.")
str_view(x, ".a..")
str_view(x, ".a...")
s <- c("Mr[5]", "Mr[3245]", "Mrs[98j]")
stringr::str_replace_all(s, "^(.*)(\\[.*\\])$", "\\2\\1")
s <- c("Mr[5]", "Mr[3245]", "Mrs[98j]")
stringr::str_replace_all(s, "^(.*)(\\[.*\\])$")
s <- c("Mr[5]", "Mr[3245]", "Mrs[98j]")
stringr::str_replace_all(s, "^(.*)(\\[.*\\])$")
gsub("^(.+)(\\[[]+\\])$", "\\2\\1", 'C[13]')
gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", 'C[13]')
x <- '[12]B1[16]M2'
x <- gsub(pattern = "\\[[0-9]{2}\\][A-Z]",
replacement = "",
x)
x
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
let
gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", element$Symbol)
x <- '[12]B1[16]M2'
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
let
num <- unlist(str_extract_all(x, "[0-9]"))
num
x <- '[12]B1[16]M2'
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
x <- gsub(pattern = "\\[[0-9]{2}\\][A-Z]",
replacement = "",
x)
num <- unlist(str_extract_all(x, "[0-9]"))
num
x
s = '[12]B1[16]M22'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
let <- do.call(c, regmatches(s, grx))
grx
let
s = '[12]B1[16]M22'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
grx
let <- do.call(c, regmatches(s, grx))
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
let <- do.call(c, regmatches(s, grx))
let
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
let <- do.call(c, regmatches(s, grx))
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  s)
out <- do.call(c, regmatches(s, grx))
out
strsplit("(\\[.*?\\].)(\\d+)", x)
x
strsplit("(\\[.*?\\].)(\\d+)", '[10]a1')
strsplit("(\\[.*?\\].)(\\d+)", '[10]A1')
strsplit('[1]X2',"(\\[.*?\\].)(\\d+)")
strsplit('[1]X2',(\\[.*?\\].)(\\d+))
strsplit('[1]X2',"(\\[.*?\\].)(\\d+)", perl = T)
strsplit("[1]X2","(\\[.*?\\].)(\\d+)", perl = T)
strsplit("[1]X2","(\\[.*?\\].)*(\\d+)", perl = T)
strsplit("[1]X2","(\\[.*?\\].)|(\\d+)", perl = T)
pat <- "(\\[.*?\\].)(\\d+)"
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
let
x <- '[12]B1[16]M2'
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
let
unlist(str_extract_all(x, "\\[[0-9]{2}\\][0-9]"))
unlist(str_extract_all(x, "\\[[0-9]{2}\\][0-9]")
§
library(gsubfn)
pat <- "(\\[.*?\\].)(\\d+)"
strapply(s, pat, simplify = c)
library(gsubfn)
pat <- "(\\[.*?\\].)(\\d+)"
strapply(s, pat, simplify = c)
x <- '[12]B1[16]M2'
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
x <- gsub(pattern = "\\[[0-9]{2}\\][A-Z]",
replacement = "",
x)
num <- unlist(str_extract_all(x, "[0-9]"))
num
x <- '[12]B1[16]M4'
let <- unlist(str_extract_all(x, "\\[[0-9]{2}\\][A-Z]"))
x <- gsub(pattern = "\\[[0-9]{2}\\][A-Z]",
replacement = "",
x)
num <- unlist(str_extract_all(x, "[0-9]"))
num
iso = '[13]C2[2]H3'
library(stringr)
let <- unlist(str_extract_all(iso, "\\[[0-9]{2}\\][A-Z]"))
x <- gsub(pattern = "\\[[0-9]{2}\\][A-Z]",
replacement = "",
x)
num <- unlist(str_extract_all(x, "[0-9]"))
let
num
iso
library(stringr)
let <- unlist(str_extract_all(iso, "\\[[0-9]{2}\\][A-Z]"))
x <- gsub(pattern = "\\[[0-9]{2}\\][A-Z]",
replacement = "",
iso)
num <- unlist(str_extract_all(x, "[0-9]"))
let
iso = '[13]C2[2]H3'
let <- unlist(str_extract_all(iso, "\\[[0-9]{2}\\][A-Z]"))
let
iso = [12]B1[16]M2'
iso = '[12]B1[16]M2'
let <- unlist(str_extract_all(iso, "\\[[0-9]{2}\\][A-Z]"))
let
iso = '[13]C2[5]H3'
let <- unlist(str_extract_all(iso, "\\[[0-9]{2}\\][A-Z]"))
let
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  iso)
let <- do.call(c, regmatches(s, grx))
grx
s = '[12]B1[16]M22'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
let <- do.call(c, regmatches(s, grx))
let
s = '[12]B1[16]M22'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
let <- do.call(c, regmatches(s, grx))
let
s = '[13]C2[2]H2'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  s)
let <- do.call(c, regmatches(s, grx))
let
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  s)
out <- do.call(c, regmatches(s, grx))
num <- gsub(".+\\][[:alpha:]]+", "", out)
num
iso = '[13]C2[2]H3'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  iso)
let <- do.call(c, regmatches(s, grx))
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  iso)
out <- do.call(c, regmatches(s, grx))
num <- gsub(".+\\][[:alpha:]]+", "", out)
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  iso)
let <- do.call(c, regmatches(iso, grx))
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  iso)
out <- do.call(c, regmatches(iso, grx))
num <- gsub(".+\\][[:alpha:]]+", "", out)
let
out
num
class(let)
class(num)
element <- as.data.frame(sysdata$element)
# replace '()' with '[]'
element$Symbol <- chartr("()", "[]", element$Symbol)
# change the formact i.e. C[13] to [13]C
element$Symbol <- gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", element$Symbol)
load("~/Dropbox/Github/MSbox/R/sysdata.rda")
element <- as.data.frame(sysdata$element)
# replace '()' with '[]'
element$Symbol <- chartr("()", "[]", element$Symbol)
# change the formact i.e. C[13] to [13]C
element$Symbol <- gsub("^(.+)(\\[[0-9]+\\])$", "\\2\\1", element$Symbol)
View(element)
atom_mass <- element$Mass[match(let, element$Symbol)]
atom_mass
View(element)
View(element)
iso_atom_class <- element$Class[match(let, element$Symbol)]
iso_atom_class
iso_atom_class <- element$Class[match(let, element.max$Symbol)]
element$Abund.<- as.numeric(element$Abund.)
element.agg <- aggregate(Abund. ~ Class, element, max)
element.max <- merge(element.agg, element)
iso_atom_class <- element$Class[match(let, element.max$Symbol)]
iso_atom_class
View(element.max)
match(let, element$Symbol)
iso_atom_class <- element$Class[match(let, element$Symbol)]
iso_atom_class
element$Mass[match(iso_atom_class, element.max$Symbol)]
match(iso_atom_class, element.max$Symbol)
iso_atom_class
class(iso_atom_class)
as.character(iso_atom_class)
iso_atom_class <- as.character(element$Class[match(let, element$Symbol)])
element$Mass[match(iso_atom_class, element.max$Symbol)]
as.character(iso_atom_class)
iso_atom_class <- as.character(element$Class[match(let, element$Symbol)])
match(iso_atom_class, element.max$Symbol)
match(iso_atom_class, element.max$Class)
iso_atom_class <- (element$Class[match(let, element$Symbol)])
element$Mass[match(iso_atom_class, element.max$Class)]
element.max$Mass[match(iso_atom_class, element.max$Class)]
iso_atom_mass <- element$Mass[match(let, element$Symbol)]
# match the monoisotopic atom
iso_atom_class <- element$Class[match(let, element$Symbol)]
atom_mass <- element.max$Mass[match(iso_atom_class, element.max$Class)]
# calculate mass difference
mass_dif <- (iso_atom_mass - atom_mass)
mass_dif
mass_total_increase <- sum(mass_dif * num)
num <- as.numeric(num)
mass_total_increase <- sum(mass_dif * num)
mass_total_increase
1.003355*2 + 1.006277*3
source('~/Dropbox/Github/MSbox/R/Iso_mass.R')
iso_mass(F = 'C7H6O4', iso = '[13]C2[2]H3') # Two 13C and three 2H are labled
Iso_mass(F = 'C7H6O4', iso = '[13]C2[2]H3') # Two 13C and three 2H are labled
source('~/Dropbox/Github/MSbox/R/Molecular_Mass.R')
Iso_mass(F = 'C7H6O4', iso = '[13]C2[2]H3') # Two 13C and three 2H are labled
source('~/Dropbox/Github/MSbox/R/Iso_mass.R')
Iso_mass(F = 'C7H6O4', iso = '[13]C2[2]H3') # Two 13C and three 2H are labled
M_mass('C7H6O4')
iso = '[13]c1[2]H'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  iso)
let <- do.call(c, regmatches(iso, grx))
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  iso)
out <- do.call(c, regmatches(iso, grx))
num <- gsub(".+\\][[:alpha:]]+", "", out)
num <- as.numeric(num)
iso = '[13]c1[2]H'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  iso)
let <- do.call(c, regmatches(iso, grx))
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  iso)
out <- do.call(c, regmatches(iso, grx))
num <- gsub(".+\\][[:alpha:]]+", "", out)
num <- as.numeric(num)
num
let
iso = '[13]c1[2]H2'
grx <- gregexpr("\\[.+?\\].+[[:digit:]]?",  iso)
let <- do.call(c, regmatches(iso, grx))
grx <- gregexpr("\\[.+?\\].+([[:digit:]]+)",  iso)
out <- do.call(c, regmatches(iso, grx))
num <- gsub(".+\\][[:alpha:]]+", "", out)
num <- as.numeric(num)
let
num
num
let
Iso_mass('C1', '[13]C1')
source('~/Dropbox/Github/MSbox/R/Iso_mass.R')
Iso_mass('C1', '[13]C1')
Iso_mass('C1H1', '[13]C1')
load("~/Dropbox/Github/MSbox/R/sysdata.rda")
Iso_mass('C1H1', '[13]C1')
Iso_mass('C1', '[13]C1')
source('~/Dropbox/Github/MSbox/R/Element_Isotope.R')
E_iso('C')
